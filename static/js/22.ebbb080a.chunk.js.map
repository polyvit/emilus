{"version":3,"sources":["views/app-views/users/UserView.js","components/shared-components/AvatarStatus/index.js","views/app-views/users/index.js"],"names":["UserView","this","props","data","visible","close","width","placement","onClose","closable","className","name","dashed","UserOutlined","id","MobileOutlined","phone","MailOutlined","email","CompassOutlined","address","city","Component","renderAvatar","type","text","AvatarStatus","suffix","subTitle","src","icon","size","shape","gap","onNameClick","onClick","UserList","state","userProfileVisible","selectedUser","showUserProfile","userInfo","setState","closeUserProfile","console","log","fetchUsers","list","status","tableColumns","title","dataIndex","render","_","record","sorter","compare","a","b","toLowerCase","company","elm","EyeOutlined","e","stopPropagation","danger","DeleteOutlined","bodyStyle","padding","columns","dataSource","rowKey","onRow","history","push","pathname","APP_PREFIX_PATH","Loading","align","cover","connect","users","error","dispatch","loadUsers"],"mappings":"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","file":"static/js/22.ebbb080a.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Avatar, Drawer, Divider } from \"antd\";\nimport {\n  MobileOutlined,\n  MailOutlined,\n  UserOutlined,\n  CompassOutlined,\n  CalendarOutlined,\n  FacebookOutlined,\n  InstagramOutlined,\n  TwitterOutlined,\n  GlobalOutlined,\n} from \"@ant-design/icons\";\n\nexport class UserView extends Component {\n  render() {\n    const { data, visible, close } = this.props;\n    return (\n      <Drawer\n        width={300}\n        placement=\"right\"\n        onClose={close}\n        closable={false}\n        visible={visible}\n      >\n        <div className=\"text-center mt-3\">\n          {/* <Avatar size={80} src={data?.img} /> */}\n          <h3 className=\"mt-2 mb-0\">{data?.name}</h3>\n          {/* <span className=\"text-muted\">{data?.personalInfo.title}</span> */}\n        </div>\n        <Divider dashed />\n        <div className=\"\">\n          <h6 className=\"text-muted text-uppercase mb-3\">Account details</h6>\n          <p>\n            <UserOutlined />\n            <span className=\"ml-3 text-dark\">id: {data?.id}</span>\n          </p>\n          {/* <p>\n            <CalendarOutlined />\n            <span className=\"ml-3 text-dark\">\n              Born in {data?.personalInfo.birthday}\n            </span>\n          </p> */}\n        </div>\n        <div className=\"mt-5\">\n          <h6 className=\"text-muted text-uppercase mb-3\">CONTACT</h6>\n          <p>\n            <MobileOutlined />\n            <span className=\"ml-3 text-dark\">{data?.phone}</span>\n          </p>\n          <p>\n            <MailOutlined />\n            <span className=\"ml-3 text-dark\">\n              {data?.email ? data?.email : \"-\"}\n            </span>\n          </p>\n          <p>\n            <CompassOutlined />\n            <span className=\"ml-3 text-dark\">{data?.address.city}</span>\n          </p>\n        </div>\n        {/* <div className=\"mt-5\">\n          <h6 className=\"text-muted text-uppercase mb-3\">Social profiles</h6>\n          <p>\n            <FacebookOutlined />\n            <a href=\"/#\" className=\"ml-3 text-dark\">\n              {data?.personalInfo.facebook ? data?.personalInfo.facebook : \"-\"}\n            </a>\n          </p>\n          <p>\n            <TwitterOutlined />\n            <a href=\"/#\" className=\"ml-3 text-dark\">\n              {data?.personalInfo.twitter ? data?.personalInfo.twitter : \"-\"}\n            </a>\n          </p>\n          <p>\n            <InstagramOutlined />\n            <a href=\"/#\" className=\"ml-3 text-dark\">\n              {data?.personalInfo.instagram\n                ? data?.personalInfo.instagram\n                : \"-\"}\n            </a>\n          </p>\n          <p>\n            <GlobalOutlined />\n            <a href=\"/#\" className=\"ml-3 text-dark\">\n              {data?.personalInfo.site ? data?.personalInfo.site : \"-\"}\n            </a>\n          </p>\n        </div> */}\n      </Drawer>\n    );\n  }\n}\n\nexport default UserView;\n","import React from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport { Avatar } from 'antd';\r\n\r\nconst renderAvatar = props => {\r\n\treturn <Avatar {...props} className={`ant-avatar-${props.type}`}>{props.text}</Avatar>;\r\n}\r\n\r\nexport const AvatarStatus = props => {\r\n\tconst { name, suffix, subTitle, id, type, src, icon, size, shape, gap, text, onNameClick } = props\r\n\treturn (\r\n\t\t<div className=\"avatar-status d-flex align-items-center\">\r\n\t\t\t{renderAvatar({icon, src, type, size, shape, gap, text })}\r\n\t\t\t<div className=\"ml-2\">\r\n\t\t\t\t<div>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tonNameClick ? \r\n\t\t\t\t\t\t<div onClick={() => onNameClick({name, subTitle, src, id})} className=\"avatar-status-name clickable\">{name}</div> \r\n\t\t\t\t\t\t:\r\n\t\t\t\t\t\t<div className=\"avatar-status-name\">{name}</div>\r\n\t\t\t\t\t}\r\n\t\t\t\t\t<span>{suffix}</span>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"text-muted avatar-status-subtitle\">{subTitle}</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nAvatarStatus.propTypes = {\r\n\tname: PropTypes.string,\r\n\tsrc: PropTypes.string,\r\n\ttype: PropTypes.string,\r\n\tonNameClick: PropTypes.func\r\n}\r\n\r\n\r\nexport default AvatarStatus;\r\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Card, Table, Tag, Tooltip, message, Button } from \"antd\";\nimport { EyeOutlined, DeleteOutlined } from \"@ant-design/icons\";\nimport moment from \"moment\";\nimport UserView from \"./UserView\";\nimport AvatarStatus from \"components/shared-components/AvatarStatus\";\nimport { loadUsers } from \"redux/actions/Users\";\nimport { APP_PREFIX_PATH } from \"configs/AppConfig\";\nimport { success } from \"concurrently/src/defaults\";\nimport Loading from \"../../../components/shared-components/Loading\";\n\nclass UserList extends Component {\n  state = {\n    userProfileVisible: false,\n    selectedUser: null,\n  };\n\n  componentDidMount() {\n    console.log(this.props);\n    this.props.fetchUsers();\n  }\n\n  // deleteUser = (userId) => {\n  //   this.setState({\n  //     users: this.state.users.filter((item) => item.id !== userId),\n  //   });\n  //   message.success({ content: `Deleted user ${userId}`, duration: 2 });\n  // };\n\n  showUserProfile = (userInfo) => {\n    this.setState({\n      userProfileVisible: true,\n      selectedUser: userInfo,\n    });\n  };\n\n  closeUserProfile = () => {\n    this.setState({\n      userProfileVisible: false,\n      selectedUser: null,\n    });\n  };\n\n  render() {\n    const { userProfileVisible, selectedUser } = this.state;\n    const { list, status } = this.props;\n\n    const tableColumns = [\n      {\n        title: \"User\",\n        dataIndex: \"name\",\n        render: (_, record) => (\n          <div className=\"d-flex\">\n            <AvatarStatus\n              src=\"https://dummyimage.com/50x50/ccc/fff&text=No+photo\"\n              name={record.name}\n              subTitle={record.email}\n            />\n          </div>\n        ),\n        sorter: {\n          compare: (a, b) => {\n            a = a.name.toLowerCase();\n            b = b.name.toLowerCase();\n            return a > b ? -1 : b > a ? 1 : 0;\n          },\n        },\n      },\n      {\n        title: \"Company name\",\n        dataIndex: \"company\",\n        render: (company) => company.name,\n      },\n      {\n        title: \"City\",\n        dataIndex: \"address\",\n        render: (address) => (\n          <Tag className=\"text-capitalize\">{address.city}</Tag>\n        ),\n      },\n      {\n        title: \"Website\",\n        dataIndex: \"website\",\n      },\n      {\n        title: \"\",\n        dataIndex: \"actions\",\n        render: (_, elm) => (\n          <div className=\"text-right\">\n            <Tooltip title=\"View\">\n              <Button\n                type=\"primary\"\n                className=\"mr-2\"\n                icon={<EyeOutlined />}\n                onClick={(e) => {\n                  e.stopPropagation();\n                  this.showUserProfile(elm);\n                }}\n                size=\"small\"\n              />\n            </Tooltip>\n            <Tooltip title=\"Delete\">\n              <Button\n                danger\n                icon={<DeleteOutlined />}\n                onClick={(e) => {\n                  e.stopPropagation();\n                  // this.deleteUser(elm.id);\n                }}\n                size=\"small\"\n              />\n            </Tooltip>\n          </div>\n        ),\n      },\n    ];\n    return (\n      <>\n        {status === \"received\" && (\n          <Card bodyStyle={{ padding: \"0px\" }}>\n            <Table\n              columns={tableColumns}\n              dataSource={list}\n              rowKey=\"id\"\n              onRow={(record) => {\n                return {\n                  onClick: () => {\n                    this.props.history.push({\n                      pathname: `${APP_PREFIX_PATH}/setting`,\n                      state: record,\n                    });\n                  },\n                };\n              }}\n            />\n            <UserView\n              data={selectedUser}\n              visible={userProfileVisible}\n              close={() => {\n                this.closeUserProfile();\n              }}\n            />\n          </Card>\n        )}\n        {status === \"loading\" && <Loading align=\"center\" cover=\"page\" />}\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    status: state.users.status,\n    error: state.users.error,\n    list: state.users.list,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    fetchUsers: () => dispatch(loadUsers()),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserList);\n"],"sourceRoot":""}