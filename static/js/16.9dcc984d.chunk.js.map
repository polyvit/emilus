{"version":3,"sources":["views/app-views/planner/PicturesList.js","views/app-views/planner/NewCanvas.js","views/app-views/planner/index.js"],"names":["randomInteger","min","max","rand","Math","random","floor","Picture","img","setAddedImage","id","src","alt","width","height","onClick","key","PicturesList","style","display","gap","overflow","Objects","map","ImageComponent","x","y","useImage","image","draggable","NewCanvas","addedImage","useState","droppedItems","setDroppedItems","setWidth","stageRef","useRef","useEffect","document","querySelector","background","parentElement","offsetWidth","ref","obj","type","uri","name","link","createElement","download","href","body","appendChild","click","removeChild","downloadURI","current","toDataURL","Planner","bodyStyle","padding"],"mappings":"kWAGA,SAASA,IAAmC,IAArBC,EAAoB,uDAAd,EAAGC,EAAW,uDAAL,IAChCC,EAAOF,EAAMG,KAAKC,UAAYH,EAAM,EAAID,GAC5C,OAAOG,KAAKE,MAAMH,GAGpB,IAAMI,EAAU,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,IAAKC,EAAoB,EAApBA,cAKtB,OACE,qCACE,qBAAKC,GAAIF,EAAIE,GAAIC,IAAKH,EAAIG,IAAKC,IAAI,QAAQC,MAAO,GAAIC,OAAQ,KAC9D,wBAAQC,QAPK,WACfN,EAAc,2BAAKD,GAAN,IAAWQ,IAAKhB,QAM3B,mBAeSiB,EAVM,SAAC,GAAuB,IAArBR,EAAoB,EAApBA,cACtB,OACE,qBAAKS,MAAO,CAAEC,QAAS,OAAQC,IAAK,OAAQC,SAAU,UAAtD,SACGC,EAAQC,KAAI,SAACf,GAAD,OACX,cAAC,EAAD,CAAsBA,IAAKA,EAAKC,cAAeA,GAAjCD,EAAIE,U,6CCpBpBc,EAAiB,SAAC,GAAmB,IAAjBb,EAAgB,EAAhBA,IAAKc,EAAW,EAAXA,EAAGC,EAAQ,EAARA,EAAQ,EACxBC,IAAShB,GAAlBiB,EADiC,oBAExC,OAAO,cAAC,IAAD,CAAOH,EAAGA,EAAGC,EAAGA,EAAGE,MAAOA,EAAOf,MAAO,IAAKC,OAAQ,IAAKe,WAAS,KA2D7DC,EAxDG,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WAAiB,EACIC,mBAAS,IADb,mBAC7BC,EAD6B,KACfC,EADe,OAEVF,mBAAS,GAFC,mBAE7BnB,EAF6B,KAEtBsB,EAFsB,KAG9BC,EAAWC,iBAAO,MAExBC,qBAAU,WACJP,GACFG,EAAgB,GAAD,mBACVD,GADU,aAAC,eAGTF,GAHQ,IAIXN,EAAG,GACHC,EAAG,UAIR,QAACK,QAAD,IAACA,OAAD,EAACA,EAAYf,MAEhBsB,qBAAU,WACKC,SAASC,cAAc,UAC7BtB,MAAMuB,WAAa,QAC1BN,EACEI,SAASC,cAAc,oBAAoBE,cAAcC,eAE1D,IAgBH,OACE,qCACE,cAAC,IAAD,CAAO9B,MAAOA,EAAOC,OAAQ,IAAK8B,IAAKR,EAAvC,SACE,cAAC,IAAD,UACGH,EAAaV,KAAI,SAACsB,GAAD,OAChB,cAAC,EAAD,CAAgBlC,IAAKkC,EAAIlC,IAAKc,EAAGoB,EAAIpB,EAAGC,EAAGmB,EAAInB,WAIrD,cAAC,IAAD,CAAQoB,KAAK,OAAO/B,QAdH,YATrB,SAAqBgC,EAAKC,GACxB,IAAIC,EAAOV,SAASW,cAAc,KAClCD,EAAKE,SAAWH,EAChBC,EAAKG,KAAOL,EACZR,SAASc,KAAKC,YAAYL,GAC1BA,EAAKM,QACLhB,SAASc,KAAKG,YAAYP,GAK1BQ,CADYrB,EAASsB,QAAQC,YACZ,gBAYf,mCCzCSC,UAbC,WAAO,IAAD,EACgB5B,qBADhB,mBACbD,EADa,KACDtB,EADC,KAGpB,OACE,gCACE,cAAC,IAAD,CAAMoD,UAAW,CAAEC,QAAS,QAA5B,SACE,cAAC,EAAD,CAAcrD,cAAeA,MAE/B,cAAC,EAAD,CAAWsB,WAAYA","file":"static/js/16.9dcc984d.chunk.js","sourcesContent":["import React from \"react\";\nimport Objects from \"../../../assets/data/furniture.data.json\";\n\nfunction randomInteger(min = 1, max = 100) {\n  let rand = min + Math.random() * (max + 1 - min);\n  return Math.floor(rand);\n}\n\nconst Picture = ({ img, setAddedImage }) => {\n  const addImage = () => {\n    setAddedImage({ ...img, key: randomInteger() });\n  };\n\n  return (\n    <>\n      <img id={img.id} src={img.src} alt=\"image\" width={80} height={80} />\n      <button onClick={addImage}>+</button>\n    </>\n  );\n};\n\nconst PicturesList = ({ setAddedImage }) => {\n  return (\n    <div style={{ display: \"flex\", gap: \"10px\", overflow: \"scroll\" }}>\n      {Objects.map((img) => (\n        <Picture key={img.id} img={img} setAddedImage={setAddedImage} />\n      ))}\n    </div>\n  );\n};\n\nexport default PicturesList;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { Stage, Layer, Image } from \"react-konva\";\nimport { Button } from \"antd\";\nimport useImage from \"use-image\";\n\nconst ImageComponent = ({ src, x, y }) => {\n  const [image] = useImage(src);\n  return <Image x={x} y={y} image={image} width={100} height={100} draggable />;\n};\n\nconst NewCanvas = ({ addedImage }) => {\n  const [droppedItems, setDroppedItems] = useState([]);\n  const [width, setWidth] = useState(0);\n  const stageRef = useRef(null);\n\n  useEffect(() => {\n    if (addedImage) {\n      setDroppedItems([\n        ...droppedItems,\n        {\n          ...addedImage,\n          x: 10,\n          y: 10,\n        },\n      ]);\n    }\n  }, [addedImage?.key]);\n\n  useEffect(() => {\n    let canvas = document.querySelector(\"canvas\");\n    canvas.style.background = \"white\";\n    setWidth(\n      document.querySelector(\".konvajs-content\").parentElement.offsetWidth\n    );\n  }, []);\n\n  function downloadURI(uri, name) {\n    var link = document.createElement(\"a\");\n    link.download = name;\n    link.href = uri;\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  }\n\n  const handleExport = () => {\n    const uri = stageRef.current.toDataURL();\n    downloadURI(uri, \"planner.png\");\n  };\n\n  return (\n    <>\n      <Stage width={width} height={500} ref={stageRef}>\n        <Layer>\n          {droppedItems.map((obj) => (\n            <ImageComponent src={obj.src} x={obj.x} y={obj.y} />\n          ))}\n        </Layer>\n      </Stage>\n      <Button type=\"link\" onClick={handleExport}>\n        Export plan image\n      </Button>\n    </>\n  );\n};\n\nexport default NewCanvas;\n","import React, { useState } from \"react\";\nimport { Card } from \"antd\";\nimport PicturesList from \"./PicturesList\";\nimport NewCanvas from \"./NewCanvas\";\n\nconst Planner = () => {\n  const [addedImage, setAddedImage] = useState();\n\n  return (\n    <div>\n      <Card bodyStyle={{ padding: \"10px\" }}>\n        <PicturesList setAddedImage={setAddedImage} />\n      </Card>\n      <NewCanvas addedImage={addedImage} />\n    </div>\n  );\n};\n\nexport default Planner;\n"],"sourceRoot":""}